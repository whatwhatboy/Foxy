#pragma once
#include "Pch/Common.hpp"
#include "Joaat.hpp"

enum eScriptEvents : int32_t {
	CEO_BAN = 1517094008, //mpply_vipgameplaydisabledtimer
	CEO_KICK = 1421455565, //BGDISMISSED
	CEO_MONEY = 75579707, //Goon_Paid_Large
	SET_BOUNTY = 1459520933, //(137, "FM_TXT_BNTY0", iVar1, PLAYER::GET_PLAYER_NAME(Var2.f_1), "", 5000, Var2.f_6);
	CLEAR_WANTED = 1743540940,
	FAKE_DEOPOSIT = -1529596656, //TICK_ATTVAN
	FORCE_MISSION = -2138393348, //), Var0.f_2, 1))
	FORCE_MISSION_2 = -1578682814, //TICK_PH_INVA
	GIVE_COLLECTIBLE = 1839167950, // DLC_SUM20_HIDDEN_COLLECTIBLES xref
	GTA_BANNER = 2114252738, //NETWORK::NETWORK_IS_SCRIPT_ACTIVE("BUSINESS_BATTLES", -1, true, 0) | Second search result
	NETWORK_BAIL = 1017995959, //NETWORK::NETWORK_BAIL(16, 0, 0);, xref func
	PERSONAL_VEH_DESTORY = -642631978, //PLYVEH_INS_DES1
	REMOTE_OFFRADAR = 1141648445, //NETWORK::GET_TIME_DIFFERENCE(NETWORK::GET_NETWORK_TIME(), Var0.f_2)
	ROTATE_CAMERA = -1428749433, //CnCTG_IN_BF
	SEND_TO_CUSTSCENE = 2139870214, //(bVar3, bVar4, 125f, 1)
	SEND_TO_ISLAND = -369672308, //CELL_HI_INV
	SEND_TO_LOCATION = 330622597, //&Var222, 11);
	SOUND_SPAM = 36077543, //CELL_APTINVYACHT
	SPECTATE = -2029707091, //SPEC_TCK1
	TELEPORT = -702866045, //Mission_Pass_Notify
	TELEPORT_TO_WAREHOUSE = -1796714618, // .f_4 == 50
	MC_TELEPORT = 891653640, // NETWORK::NETWORK_HASH_FROM_PLAYER_HANDLE(PLAYER::PLAYER_ID()) == (first one)
	START_ACTIVITY = 1104117595, // (Var0.f_2, -1); first match
	MARK_PLAYER_AS_BEAST = -1721728321, // GB_BOSSBST xref == PLAYER... global (sadly doesn't actually turn people into the beast)
	KICK_FROM_INTERIOR = 786522321, // ENTITY::SET_ENTITY_HEALTH(PLAYER::PLAYER_PED_ID(), PED::GET_PED_MAX_HEALTH(PLAYER::PLAYER_PED_ID()), false)
	INTERIOR_CONTROL = 1727896103, // eventData.f_3 != _INVALID_PLAYER_INDEX_0()
	TRANSACTION_ERROR = 54323524, //NETWORK_RECEIVE_PLAYER_JOBSHARE_CASH
	VEH_KICK = -1603050746, //PIM_RFMOC
	NOTIFICATION = 2041805809,
	STOLEN_MONEY = 82080686, //TICK_TC_STOL
	BANKED_MONEY = 276906331, //TICK_TC_BANK
	REMOVED_MONEY = 853249803, //TICK_TC_REMO
	KICK = 1674887089,
	KICK_2 = 998716537,
	KICK_3 = -1501164935,
	CRASH = -992162568, //SET_NO_LOADING_SCREEN xref
	CRASH_2 = 1131623211,
	CRASH_3 = 1556360603,
	TSE_COMMAND = -1428749433, //CnCTG_IN_BF
	TSE_COMMAND_ROTATE_CAMERA = "pats_horse_right"_joaat, // != 29) && f
};
enum eObjType : int16_t {
	carObjType = 0,
	bikeObjType = 1,
	boatObjType = 2,
	doorObjType = 3,
	heliObjType = 4,
	objType = 5,
	pedObjType = 6,
	pickupObjType = 7,
	pickupPlacementObjType = 8,
	planeObjType = 9,
	submarineObjType = 10,
	playerObjType = 11,
	trailerObjType = 12,
	trainObjType = 13,
	unkObjType = -1
};
enum class eModelType : uint8_t {
	Invalid,
	Object,
	Interior,
	Window,
	Weapon,
	Vehicle,
	Ped,
	Destructable,
	WorldObject = 33,
	Sprinkler = 35,
	Unk65 = 65,
	EmissiveLOD = 67,
	Plant = 129,
	LOD = 131,
	Unk132 = 132,
	Unk133 = 133,
	OnlineOnlyPed = 134,
	Building = 161,
	Unk193 = 193
};
enum class eVehicleType : uint32_t {
	Car,
	Plane,
	Unk2,
	Quadbike,
	Unk4,
	Unk5,
	AmphibiousCar,
	AmphibiousQuadbike,
	Heli,
	Unk9,
	Unk10,
	Bike,
	Bicycle,
	Boat,
	Train
};
enum class eSyncReturnTypes : int64_t {
	notInRoamingBubble = 1,
	wrongObjOwner = 2,
	unkRet3 = 3,
	noNetObjData = 4,
	noGameObjData = 6,
	unkRet5 = 5,
	networkClosed = 7,
	successfullSync = 8,
};
enum class eNetworkEvents : uint16_t {
	CObjectIdFreedEvent,
	CObjectIdRequestEvent,
	CArrayDataVerifyEvent,
	CScriptArrayDataVerifyEvent,
	CRequestControlEvent,
	CGiveControlEvent,
	CWeaponDamageEvent,
	CRequestPickupEvent,
	CRequestMapPickupEvent,
	CGameClockEvent,
	CGameWeatherEvent,
	CRespawnPlayerPedEvent,
	CGiveWeaponEvent,
	CRemoveWeaponEvent,
	CRemoveAllWeaponsEvent,
	CVehicleComponentControlEvent,
	CFireEvent,
	CExplosionEvent,
	CStartProjectileEvent,
	CUpdateProjectileTargetEvent,
	CRemoveProjectileEntityEvent,
	CBreakProjectileTargetLockEvent,
	CAlterWantedLevelEvent,
	CChangeRadioStationEvent,
	CRagdollRequestEvent,
	CPlayerTauntEvent,
	CPlayerCardStatEvent,
	CDoorBreakEvent,
	CScriptedGameEvent,
	CRemoteScriptInfoEvent,
	CRemoteScriptLeaveEvent,
	CMarkAsNoLongerNeededEvent,
	CConvertToScriptEntityEvent,
	CScriptWorldStateEvent,
	CClearAreaEvent,
	CClearRectangleAreaEvent,
	CNetworkRequestSyncedSceneEvent,
	CNetworkStartSyncedSceneEvent,
	CNetworkStopSyncedSceneEvent,
	CNetworkUpdateSyncedSceneEvent,
	CIncidentEntityEvent,
	CGivePedScriptedTaskEvent,
	CGivePedSequenceTaskEvent,
	CNetworkClearPedTasksEvent,
	CNetworkStartPedArrestEvent,
	CNetworkStartPedUncuffEvent,
	CNetworkSoundCarHornEvent,
	CNetworkEntityAreaStatusEvent,
	CNetworkGarageOccupiedStatusEvent,
	CPedConversationLineEvent,
	CScriptEntityStateChangeEvent,
	CNetworkPlaySoundEvent,
	CNetworkStopSoundEvent,
	CNetworkPlayAirdefenseFireEvent,
	CNetworkBankRequestEvent,
	CNetworkAudioBarkEvent,
	CRequestDoorEvent,
	CNetworkTrainReportEvent,
	CNetworkTrainRequestEvent,
	CNetworkIncrementStatEvent,
	CModifyVehicleLockWordStateData,
	CModifyPtfxWordStateDataScriptedEvolveEvent,
	CRequestPhoneExplosionEvent,
	CRequestDetachmentEvent,
	CKickVotesEvent,
	CGivePickupRewardsEvent,
	CNetworkCrcHashCheckEvent,
	CBlowUpVehicleEvent,
	CNetworkSpecialFireEquippedWeapon,
	CNetworkRespondedToThreatEvent,
	CNetworkShoutTargetPosition,
	CVoiceDrivenMouthMovementFinishedEvent,
	CPickupDestroyedEvent,
	CUpdatePlayerScarsEvent,
	CNetworkCheckExeSizeEvent,
	CNetworkPtfxEvent,
	CNetworkPedSeenDeadPedEvent,
	CRemoveStickyBombEvent,
	CNetworkCheckCodeCrcsEvent,
	CInformSilencedGunshotEvent,
	CPedPlayPainEvent,
	CCachePlayerHeadBlendDataEvent,
	CRemovePedFromPedgroupEvent,
	CUpdateFxnEvent,
	CReportCashSpawnEvent,
	CActivateVehicleSpecialAbilityEvent,
	CBlockWeaponSelection,
	CNetworkCheckCatalogCrc
};
enum class ePlayerGameState : int32_t {
	Invalid = -1,
	Playing,
	Died,
	Arrested,
	FailedMission,
	LeftGame,
	Respawn,
	InMPCutscene
};
enum class eGameState : int32_t {
	Invalid = -1,
	Playing,
	PreLegal,
	Unknown_2,
	Legals,
	Unknown_4,
	MainMenu,
	Transition,
	Unknown_7,
	Unknown_8,
	Unknown_9,
	SessionStartLeave
};
enum eEntityType : uint8_t {
	EntityTypeVehicle = 3,
	EntityTypePed = 4,
	EntityTypeObject = 5
};
enum ePedType {
	PED_TYPE_PLAYER_0,
	PED_TYPE_PLAYER_1,
	PED_TYPE_NETWORK_PLAYER,
	PED_TYPE_PLAYER_2,
	PED_TYPE_CIVMALE,
	PED_TYPE_CIVFEMALE,
	PED_TYPE_COP,
	PED_TYPE_GANG_ALBANIAN,
	PED_TYPE_GANG_BIKER_1,
	PED_TYPE_GANG_BIKER_2,
	PED_TYPE_GANG_ITALIAN,
	PED_TYPE_GANG_RUSSIAN,
	PED_TYPE_GANG_RUSSIAN_2,
	PED_TYPE_GANG_IRISH,
	PED_TYPE_GANG_JAMAICAN,
	PED_TYPE_GANG_AFRICAN_AMERICAN,
	PED_TYPE_GANG_KOREAN,
	PED_TYPE_GANG_CHINESE_JAPANESE,
	PED_TYPE_GANG_PUERTO_RICAN,
	PED_TYPE_DEALER,
	PED_TYPE_MEDIC,
	PED_TYPE_FIREMAN,
	PED_TYPE_CRIMINAL,
	PED_TYPE_BUM,
	PED_TYPE_PROSTITUTE,
	PED_TYPE_SPECIAL,
	PED_TYPE_MISSION,
	PED_TYPE_SWAT,
	PED_TYPE_ANIMAL,
	PED_TYPE_ARMY
};
enum eFrameFlags : uint32_t {
	eFrameFlagExplosiveAmmo = 1 << 11,
	eFrameFlagFireAmmo = 1 << 12,
	eFrameFlagExplosiveMelee = 1 << 13,
	eFrameFlagSuperJump = 1 << 14,
};
enum class eCloneSyncType : int64_t {
	NotInBubble,
	WrongOwner,
	NoNetObj,
	NoGameObj,
	NetClosed,
	Success,
	Invalid = -1,
};
enum class eAmmoSpecialType : int32_t {
	None,
	ArmorPiercing,
	Explosive,
	FMJ,
	HollowPoint,
	Incendiary,
	Tracer
};
enum class eDamageType : int32_t {
	Unknown,
	None,
	Melee,
	Bullet,
	_0xC5403EC0,
	Explosive,
	Fire,
	_0xA869C908,
	Fall,
	_0xCAE075C0,
	Electric,
	BarbedWire,
	FireExtinguisher,
	Smoke,
	WaterCannon,
	_0x1C8E59AE
};
enum class eFireType : int32_t {
	None,
	Melee,
	InstantHit,
	DelayedHit,
	ProjectTile,
	VolumetricParticle
};
enum class eWheelSlot : int32_t {
	Pistol,
	SMG,
	Rifle,
	Sniper,
	UnarmedMelee,
	ShotGun,
	Heavy,
	Throwable
};
enum class ePoolTypes : uint16_t {
	vehicle = 1,
	ped = 2,
	object = 4,
	pickup = 8,
	camera = 16
};
enum eGameVersion : int {
	VER_1_0_335_2_STEAM,
	VER_1_0_335_2_NOSTEAM,
	VER_1_0_350_1_STEAM,
	VER_1_0_350_2_NOSTEAM,
	VER_1_0_372_2_STEAM,
	VER_1_0_372_2_NOSTEAM,
	VER_1_0_393_2_STEAM,
	VER_1_0_393_2_NOSTEAM,
	VER_1_0_393_4_STEAM,
	VER_1_0_393_4_NOSTEAM,
	VER_1_0_463_1_STEAM,
	VER_1_0_463_1_NOSTEAM,
	VER_1_0_505_2_STEAM,
	VER_1_0_505_2_NOSTEAM,
	VER_1_0_573_1_STEAM,
	VER_1_0_573_1_NOSTEAM,
	VER_1_0_617_1_STEAM,
	VER_1_0_617_1_NOSTEAM,
	VER_1_0_678_1_STEAM,
	VER_1_0_678_1_NOSTEAM,
	VER_1_0_757_2_STEAM,
	VER_1_0_757_2_NOSTEAM,
	VER_1_0_757_4_STEAM,
	VER_1_0_757_4_NOSTEAM,
	VER_1_0_791_2_STEAM,
	VER_1_0_791_2_NOSTEAM,
	VER_1_0_877_1_STEAM,
	VER_1_0_877_1_NOSTEAM,
	VER_1_0_944_2_STEAM,
	VER_1_0_944_2_NOSTEAM,
	VER_1_0_1011_1_STEAM,
	VER_1_0_1011_1_NOSTEAM,
	VER_1_0_1032_1_STEAM,
	VER_1_0_1032_1_NOSTEAM,
	VER_1_0_1103_2_STEAM,
	VER_1_0_1103_2_NOSTEAM,
	VER_1_0_1180_2_STEAM,
	VER_1_0_1180_2_NOSTEAM,
	VER_1_0_1290_1_STEAM,
	VER_1_0_1290_1_NOSTEAM,
	VER_1_0_1365_1_STEAM,
	VER_1_0_1365_1_NOSTEAM,
	VER_1_0_1493_0_STEAM,
	VER_1_0_1493_0_NOSTEAM,
	VER_1_0_1493_1_STEAM,
	VER_1_0_1493_1_NOSTEAM,
	VER_1_0_1604_0_STEAM,
	VER_1_0_1604_0_NOSTEAM,
	VER_1_0_1604_1_STEAM,
	VER_1_0_1604_1_NOSTEAM,
	VER_1_0_1737_0_STEAM,
	VER_1_0_1737_0_NOSTEAM,
	VER_1_0_1737_6_STEAM,
	VER_1_0_1737_6_NOSTEAM,
	VER_1_0_1868_0_STEAM,
	VER_1_0_1868_0_NOSTEAM,
	VER_1_0_1868_1_STEAM,
	VER_1_0_1868_1_NOSTEAM,
	VER_1_0_1868_4_EPIC,
	VER_1_0_2060_0_STEAM,
	VER_1_0_2060_0_NOSTEAM,
	VER_1_0_2060_1_STEAM,
	VER_1_0_2060_1_NOSTEAM,
	VER_1_0_2189_0_STEAM,
	VER_1_0_2189_0_NOSTEAM,
	VER_1_0_2545_STEAM,
	VER_1_0_2545_0_NOSTEAM,
	VER_1_0_2612_STEAM,
	VER_1_0_2612_0_NOSTEAM,
	VER_SIZE,
	VER_UNK = -1
};

enum eBlipColor {
	ColorWhite = 0,
	ColorRed = 1,
	ColorGreen = 2,
	ColorBlue = 3,
	ColorPlayer = 4,
	ColorYellow = 5,
	ColorPurple = 7,
	ColorVehicle = 38,
	ColorMichael = 42,
	ColorFranklin = 43,
	ColorTrevor = 44,
	ColorMissionRed = 49,
	ColorMissionVehicle = 54,
	ColorYellowMission = 66,
	ColorYellowMission2 = 60,
	ColorWaypoint = 84
};
enum eBlipSprite {
	SpriteStandard = 1,
	SpriteBig = 2,
	SpritePoliceOfficer = 3,
	SpritePoliceArea = 4,
	SpriteSquare = 5,
	SpritePlayer = 6,
	SpriteNorth = 7,
	SpriteWaypoint = 8,
	SpriteBigCircle = 9,
	SpriteBigCircleOutline = 10,
	SpriteArrowUpOutlined = 11,
	SpriteArrowDownOutlined = 12,
	SpriteArrowUp = 13,
	SpriteArrowDown = 14,
	SpritePoliceHelicopterAnimated = 15,
	SpriteJet = 16,
	SpriteNumber1 = 17,
	SpriteNumber2 = 18,
	SpriteNumber3 = 19,
	SpriteNumber4 = 20,
	SpriteNumber5 = 21,
	SpriteNumber6 = 22,
	SpriteNumber7 = 23,
	SpriteNumber8 = 24,
	SpriteNumber9 = 25,
	SpriteNumber10 = 26,
	SpriteGTAOCrew = 27,
	SpriteGTAOFriendly = 28,
	SpriteLift = 36,
	SpriteRaceFinish = 38,
	SpriteSafehouse = 40,
	SpritePoliceOfficer2 = 41,
	SpritePoliceCarDot = 42,
	SpritePoliceHelicopter = 43,
	SpriteChatBubble = 47,
	SpriteGarage2 = 50,
	SpriteDrugs = 51,
	SpriteStore = 52,
	SpritePoliceCar = 56,
	SpritePolicePlayer = 58,
	SpritePoliceStation = 60,
	SpriteHospital = 61,
	SpriteHelicopter = 64,
	SpriteStrangersAndFreaks = 65,
	SpriteArmoredTruck = 66,
	SpriteTowTruck = 68,
	SpriteBarber = 71,
	SpriteLosSantosCustoms = 72,
	SpriteClothes = 73,
	SpriteTattooParlor = 75,
	SpriteSimeon = 76,
	SpriteLester = 77,
	SpriteMichael = 78,
	SpriteTrevor = 79,
	SpriteRampage = 84,
	SpriteVinewoodTours = 85,
	SpriteLamar = 86,
	SpriteFranklin = 88,
	SpriteChinese = 89,
	SpriteAirport = 90,
	SpriteBar = 93,
	SpriteBaseJump = 94,
	SpriteCarWash = 100,
	SpriteComedyClub = 102,
	SpriteDart = 103,
	SpriteFIB = 106,
	SpriteDollarSign = 108,
	SpriteGolf = 109,
	SpriteAmmuNation = 110,
	SpriteExile = 112,
	SpriteShootingRange = 119,
	SpriteSolomon = 120,
	SpriteStripClub = 121,
	SpriteTennis = 122,
	SpriteTriathlon = 126,
	SpriteOffRoadRaceFinish = 127,
	SpriteKey = 134,
	SpriteMovieTheater = 135,
	SpriteMusic = 136,
	SpriteMarijuana = 140,
	SpriteHunting = 141,
	SpriteArmsTraffickingGround = 147,
	SpriteNigel = 149,
	SpriteAssaultRifle = 150,
	SpriteBat = 151,
	SpriteGrenade = 152,
	SpriteHealth = 153,
	SpriteKnife = 154,
	SpriteMolotov = 155,
	SpritePistol = 156,
	SpriteRPG = 157,
	SpriteShotgun = 158,
	SpriteSMG = 159,
	SpriteSniper = 160,
	SpriteSonicWave = 161,
	SpritePointOfInterest = 162,
	SpriteGTAOPassive = 163,
	SpriteGTAOUsingMenu = 164,
	SpriteLink = 171,
	SpriteMinigun = 173,
	SpriteGrenadeLauncher = 174,
	SpriteArmor = 175,
	SpriteCastle = 176,
	SpriteCamera = 184,
	SpriteHandcuffs = 188,
	SpriteYoga = 197,
	SpriteCab = 198,
	SpriteNumber11 = 199,
	SpriteNumber12 = 200,
	SpriteNumber13 = 201,
	SpriteNumber14 = 202,
	SpriteNumber15 = 203,
	SpriteNumber16 = 204,
	SpriteShrink = 205,
	SpriteEpsilon = 206,
	SpritePersonalVehicleCar = 225,
	SpritePersonalVehicleBike = 226,
	SpriteCustody = 237,
	SpriteArmsTraffickingAir = 251,
	SpriteFairground = 266,
	SpritePropertyManagement = 267,
	SpriteAltruist = 269,
	SpriteEnemy = 270,
	SpriteChop = 273,
	SpriteDead = 274,
	SpriteHooker = 279,
	SpriteFriend = 280,
	SpriteBountyHit = 303,
	SpriteGTAOMission = 304,
	SpriteGTAOSurvival = 305,
	SpriteCrateDrop = 306,
	SpritePlaneDrop = 307,
	SpriteSub = 308,
	SpriteRace = 309,
	SpriteDeathmatch = 310,
	SpriteArmWrestling = 311,
	SpriteAmmuNationShootingRange = 313,
	SpriteRaceAir = 314,
	SpriteRaceCar = 315,
	SpriteRaceSea = 316,
	SpriteGarbageTruck = 318,
	SpriteMotorCycle = 348,
	SpriteSafehouseForSale = 350,
	SpritePackage = 351,
	SpriteMartinMadrazo = 352,
	SpriteEnemyHelicopter = 353,
	SpriteBoost = 354,
	SpriteDevin = 355,
	SpriteMarina = 356,
	SpriteGarage = 357,
	SpriteGolfFlag = 358,
	SpriteHangar = 359,
	SpriteHelipad = 360,
	SpriteJerryCan = 361,
	SpriteMasks = 362,
	SpriteHeistSetup = 363,
	SpriteIncapacitated = 364,
	SpritePickupSpawn = 365,
	SpriteBoilerSuit = 366,
	SpriteCompleted = 367,
	SpriteRockets = 368,
	SpriteGarageForSale = 369,
	SpriteHelipadForSale = 370,
	SpriteMarinaForSale = 371,
	SpriteHangarForSale = 372,
	SpriteBusiness = 374,
	SpriteBusinessForSale = 375,
	SpriteRaceBike = 376,
	SpriteParachute = 377,
	SpriteTeamDeathmatch = 378,
	SpriteRaceFoot = 379,
	SpriteVehicleDeathmatch = 380,
	SpriteBarry = 381,
	SpriteDom = 382,
	SpriteMaryAnn = 383,
	SpriteCletus = 384,
	SpriteJosh = 385,
	SpriteMinute = 386,
	SpriteOmega = 387,
	SpriteTonya = 388,
	SpritePaparazzo = 389,
	SpriteCrosshair = 390,
	SpriteCreator = 398,
	SpriteCreatorDirection = 399,
	SpriteAbigail = 400,
	SpriteBlimp = 401,
	SpriteRepair = 402,
	SpriteTestosterone = 403,
	SpriteDinghy = 404,
	SpriteFanatic = 405,
	SpriteInformation = 407,
	SpriteCaptureBriefcase = 408,
	SpriteLastTeamStanding = 409,
	SpriteBoat = 410,
	SpriteCaptureHouse = 411,
	SpriteJerryCan2 = 415,
	SpriteRP = 416,
	SpriteGTAOPlayerSafehouse = 417,
	SpriteGTAOPlayerSafehouseDead = 418,
	SpriteCaptureAmericanFlag = 419,
	SpriteCaptureFlag = 420,
	SpriteTank = 421,
	SpriteHelicopterAnimated = 422,
	SpritePlane = 423,
	SpriteJet2 = 424,
	SpritePlayerNoColor = 425,
	SpriteGunCar = 426,
	SpriteSpeedboat = 427,
	SpriteHeist = 428,
	SpriteStopwatch = 430,
	SpriteDollarSignCircled = 431,
	SpriteCrosshair2 = 432,
	SpriteDollarSignSquared = 434,
};
enum class ePedTask {
	TASK_NONE,
	TASK_FOOT = 1 << 4,
	TASK_UNK = 1 << 5,
	TASK_DRIVING = 1 << 6
};
enum class eControllerInputs : int32_t {
	INPUT_NEXT_CAMERA,
	INPUT_LOOK_LR,
	INPUT_LOOK_UD,
	INPUT_LOOK_UP_ONLY,
	INPUT_LOOK_DOWN_ONLY,
	INPUT_LOOK_LEFT_ONLY,
	INPUT_LOOK_RIGHT_ONLY,
	INPUT_CINEMATIC_SLOWMO,
	INPUT_SCRIPTED_FLY_UD,
	INPUT_SCRIPTED_FLY_LR,
	INPUT_SCRIPTED_FLY_ZUP,
	INPUT_SCRIPTED_FLY_ZDOWN,
	INPUT_WEAPON_WHEEL_UD,
	INPUT_WEAPON_WHEEL_LR,
	INPUT_WEAPON_WHEEL_NEXT,
	INPUT_WEAPON_WHEEL_PREV,
	INPUT_SELECT_NEXT_WEAPON,
	INPUT_SELECT_PREV_WEAPON,
	INPUT_SKIP_CUTSCENE,
	INPUT_CHARACTER_WHEEL,
	INPUT_MULTIPLAYER_INFO,
	INPUT_SPRINT,
	INPUT_JUMP,
	INPUT_ENTER,
	INPUT_ATTACK,
	INPUT_AIM,
	INPUT_LOOK_BEHIND,
	INPUT_PHONE,
	INPUT_SPECIAL_ABILITY,
	INPUT_SPECIAL_ABILITY_SECONDARY,
	INPUT_MOVE_LR,
	INPUT_MOVE_UD,
	INPUT_MOVE_UP_ONLY,
	INPUT_MOVE_DOWN_ONLY,
	INPUT_MOVE_LEFT_ONLY,
	INPUT_MOVE_RIGHT_ONLY,
	INPUT_DUCK,
	INPUT_SELECT_WEAPON,
	INPUT_PICKUP,
	INPUT_SNIPER_ZOOM,
	INPUT_SNIPER_ZOOM_IN_ONLY,
	INPUT_SNIPER_ZOOM_OUT_ONLY,
	INPUT_SNIPER_ZOOM_IN_SECONDARY,
	INPUT_SNIPER_ZOOM_OUT_SECONDARY,
	INPUT_COVER,
	INPUT_RELOAD,
	INPUT_TALK,
	INPUT_DETONATE,
	INPUT_HUD_SPECIAL,
	INPUT_ARREST,
	INPUT_ACCURATE_AIM,
	INPUT_CONTEXT,
	INPUT_CONTEXT_SECONDARY,
	INPUT_WEAPON_SPECIAL,
	INPUT_WEAPON_SPECIAL_TWO,
	INPUT_DIVE,
	INPUT_DROP_WEAPON,
	INPUT_DROP_AMMO,
	INPUT_THROW_GRENADE,
	INPUT_VEH_MOVE_LR,
	INPUT_VEH_MOVE_UD,
	INPUT_VEH_MOVE_UP_ONLY,
	INPUT_VEH_MOVE_DOWN_ONLY,
	INPUT_VEH_MOVE_LEFT_ONLY,
	INPUT_VEH_MOVE_RIGHT_ONLY,
	INPUT_VEH_SPECIAL,
	INPUT_VEH_GUN_LR,
	INPUT_VEH_GUN_UD,
	INPUT_VEH_AIM,
	INPUT_VEH_ATTACK,
	INPUT_VEH_ATTACK2,
	INPUT_VEH_ACCELERATE,
	INPUT_VEH_BRAKE,
	INPUT_VEH_DUCK,
	INPUT_VEH_HEADLIGHT,
	INPUT_VEH_EXIT,
	INPUT_VEH_HANDBRAKE,
	INPUT_VEH_HOTWIRE_LEFT,
	INPUT_VEH_HOTWIRE_RIGHT,
	INPUT_VEH_LOOK_BEHIND,
	INPUT_VEH_CIN_CAM,
	INPUT_VEH_NEXT_RADIO,
	INPUT_VEH_PREV_RADIO,
	INPUT_VEH_NEXT_RADIO_TRACK,
	INPUT_VEH_PREV_RADIO_TRACK,
	INPUT_VEH_RADIO_WHEEL,
	INPUT_VEH_HORN,
	INPUT_VEH_FLY_THROTTLE_UP,
	INPUT_VEH_FLY_THROTTLE_DOWN,
	INPUT_VEH_FLY_YAW_LEFT,
	INPUT_VEH_FLY_YAW_RIGHT,
	INPUT_VEH_PASSENGER_AIM,
	INPUT_VEH_PASSENGER_ATTACK,
	INPUT_VEH_SPECIAL_ABILITY_FRANKLIN,
	INPUT_VEH_STUNT_UD,
	INPUT_VEH_CINEMATIC_UD,
	INPUT_VEH_CINEMATIC_UP_ONLY,
	INPUT_VEH_CINEMATIC_DOWN_ONLY,
	INPUT_VEH_CINEMATIC_LR,
	INPUT_VEH_SELECT_NEXT_WEAPON,
	INPUT_VEH_SELECT_PREV_WEAPON,
	INPUT_VEH_ROOF,
	INPUT_VEH_JUMP,
	INPUT_VEH_GRAPPLING_HOOK,
	INPUT_VEH_SHUFFLE,
	INPUT_VEH_DROP_PROJECTILE,
	INPUT_VEH_MOUSE_CONTROL_OVERRIDE,
	INPUT_VEH_FLY_ROLL_LR,
	INPUT_VEH_FLY_ROLL_LEFT_ONLY,
	INPUT_VEH_FLY_ROLL_RIGHT_ONLY,
	INPUT_VEH_FLY_PITCH_UD,
	INPUT_VEH_FLY_PITCH_UP_ONLY,
	INPUT_VEH_FLY_PITCH_DOWN_ONLY,
	INPUT_VEH_FLY_UNDERCARRIAGE,
	INPUT_VEH_FLY_ATTACK,
	INPUT_VEH_FLY_SELECT_NEXT_WEAPON,
	INPUT_VEH_FLY_SELECT_PREV_WEAPON,
	INPUT_VEH_FLY_SELECT_TARGET_LEFT,
	INPUT_VEH_FLY_SELECT_TARGET_RIGHT,
	INPUT_VEH_FLY_VERTICAL_FLIGHT_MODE,
	INPUT_VEH_FLY_DUCK,
	INPUT_VEH_FLY_ATTACK_CAMERA,
	INPUT_VEH_FLY_MOUSE_CONTROL_OVERRIDE,
	INPUT_VEH_SUB_TURN_LR,
	INPUT_VEH_SUB_TURN_LEFT_ONLY,
	INPUT_VEH_SUB_TURN_RIGHT_ONLY,
	INPUT_VEH_SUB_PITCH_UD,
	INPUT_VEH_SUB_PITCH_UP_ONLY,
	INPUT_VEH_SUB_PITCH_DOWN_ONLY,
	INPUT_VEH_SUB_THROTTLE_UP,
	INPUT_VEH_SUB_THROTTLE_DOWN,
	INPUT_VEH_SUB_ASCEND,
	INPUT_VEH_SUB_DESCEND,
	INPUT_VEH_SUB_TURN_HARD_LEFT,
	INPUT_VEH_SUB_TURN_HARD_RIGHT,
	INPUT_VEH_SUB_MOUSE_CONTROL_OVERRIDE,
	INPUT_VEH_PUSHBIKE_PEDAL,
	INPUT_VEH_PUSHBIKE_SPRINT,
	INPUT_VEH_PUSHBIKE_FRONT_BRAKE,
	INPUT_VEH_PUSHBIKE_REAR_BRAKE,
	INPUT_MELEE_ATTACK_LIGHT,
	INPUT_MELEE_ATTACK_HEAVY,
	INPUT_MELEE_ATTACK_ALTERNATE,
	INPUT_MELEE_BLOCK,
	INPUT_PARACHUTE_DEPLOY,
	INPUT_PARACHUTE_DETACH,
	INPUT_PARACHUTE_TURN_LR,
	INPUT_PARACHUTE_TURN_LEFT_ONLY,
	INPUT_PARACHUTE_TURN_RIGHT_ONLY,
	INPUT_PARACHUTE_PITCH_UD,
	INPUT_PARACHUTE_PITCH_UP_ONLY,
	INPUT_PARACHUTE_PITCH_DOWN_ONLY,
	INPUT_PARACHUTE_BRAKE_LEFT,
	INPUT_PARACHUTE_BRAKE_RIGHT,
	INPUT_PARACHUTE_SMOKE,
	INPUT_PARACHUTE_PRECISION_LANDING,
	INPUT_MAP,
	INPUT_SELECT_WEAPON_UNARMED,
	INPUT_SELECT_WEAPON_MELEE,
	INPUT_SELECT_WEAPON_HANDGUN,
	INPUT_SELECT_WEAPON_SHOTGUN,
	INPUT_SELECT_WEAPON_SMG,
	INPUT_SELECT_WEAPON_AUTO_RIFLE,
	INPUT_SELECT_WEAPON_SNIPER,
	INPUT_SELECT_WEAPON_HEAVY,
	INPUT_SELECT_WEAPON_SPECIAL,
	INPUT_SELECT_CHARACTER_MICHAEL,
	INPUT_SELECT_CHARACTER_FRANKLIN,
	INPUT_SELECT_CHARACTER_TREVOR,
	INPUT_SELECT_CHARACTER_MULTIPLAYER,
	INPUT_SAVE_REPLAY_CLIP,
	INPUT_SPECIAL_ABILITY_PC,
	INPUT_CELLPHONE_UP,
	INPUT_CELLPHONE_DOWN,
	INPUT_CELLPHONE_LEFT,
	INPUT_CELLPHONE_RIGHT,
	INPUT_CELLPHONE_SELECT,
	INPUT_CELLPHONE_CANCEL,
	INPUT_CELLPHONE_OPTION,
	INPUT_CELLPHONE_EXTRA_OPTION,
	INPUT_CELLPHONE_SCROLL_FORWARD,
	INPUT_CELLPHONE_SCROLL_BACKWARD,
	INPUT_CELLPHONE_CAMERA_FOCUS_LOCK,
	INPUT_CELLPHONE_CAMERA_GRID,
	INPUT_CELLPHONE_CAMERA_SELFIE,
	INPUT_CELLPHONE_CAMERA_DOF,
	INPUT_CELLPHONE_CAMERA_EXPRESSION,
	INPUT_FRONTEND_DOWN,
	INPUT_FRONTEND_UP,
	INPUT_FRONTEND_LEFT,
	INPUT_FRONTEND_RIGHT,
	INPUT_FRONTEND_RDOWN,
	INPUT_FRONTEND_RUP,
	INPUT_FRONTEND_RLEFT,
	INPUT_FRONTEND_RRIGHT,
	INPUT_FRONTEND_AXIS_X,
	INPUT_FRONTEND_AXIS_Y,
	INPUT_FRONTEND_RIGHT_AXIS_X,
	INPUT_FRONTEND_RIGHT_AXIS_Y,
	INPUT_FRONTEND_PAUSE,
	INPUT_FRONTEND_PAUSE_ALTERNATE,
	INPUT_FRONTEND_ACCEPT,
	INPUT_FRONTEND_CANCEL,
	INPUT_FRONTEND_X,
	INPUT_FRONTEND_Y,
	INPUT_FRONTEND_LB,
	INPUT_FRONTEND_RB,
	INPUT_FRONTEND_LT,
	INPUT_FRONTEND_RT,
	INPUT_FRONTEND_LS,
	INPUT_FRONTEND_RS,
	INPUT_FRONTEND_LEADERBOARD,
	INPUT_FRONTEND_SOCIAL_CLUB,
	INPUT_FRONTEND_SOCIAL_CLUB_SECONDARY,
	INPUT_FRONTEND_DELETE,
	INPUT_FRONTEND_ENDSCREEN_ACCEPT,
	INPUT_FRONTEND_ENDSCREEN_EXPAND,
	INPUT_FRONTEND_SELECT,
	INPUT_SCRIPT_LEFT_AXIS_X,
	INPUT_SCRIPT_LEFT_AXIS_Y,
	INPUT_SCRIPT_RIGHT_AXIS_X,
	INPUT_SCRIPT_RIGHT_AXIS_Y,
	INPUT_SCRIPT_RUP,
	INPUT_SCRIPT_RDOWN,
	INPUT_SCRIPT_RLEFT,
	INPUT_SCRIPT_RRIGHT,
	INPUT_SCRIPT_LB,
	INPUT_SCRIPT_RB,
	INPUT_SCRIPT_LT,
	INPUT_SCRIPT_RT,
	INPUT_SCRIPT_LS,
	INPUT_SCRIPT_RS,
	INPUT_SCRIPT_PAD_UP,
	INPUT_SCRIPT_PAD_DOWN,
	INPUT_SCRIPT_PAD_LEFT,
	INPUT_SCRIPT_PAD_RIGHT,
	INPUT_SCRIPT_SELECT,
	INPUT_CURSOR_ACCEPT,
	INPUT_CURSOR_CANCEL,
	INPUT_CURSOR_X,
	INPUT_CURSOR_Y,
	INPUT_CURSOR_SCROLL_UP,
	INPUT_CURSOR_SCROLL_DOWN,
	INPUT_ENTER_CHEAT_CODE,
	INPUT_INTERACTION_MENU,
	INPUT_MP_TEXT_CHAT_ALL,
	INPUT_MP_TEXT_CHAT_TEAM,
	INPUT_MP_TEXT_CHAT_FRIENDS,
	INPUT_MP_TEXT_CHAT_CREW,
	INPUT_PUSH_TO_TALK,
	INPUT_CREATOR_LS,
	INPUT_CREATOR_RS,
	INPUT_CREATOR_LT,
	INPUT_CREATOR_RT,
	INPUT_CREATOR_MENU_TOGGLE,
	INPUT_CREATOR_ACCEPT,
	INPUT_CREATOR_DELETE,
	INPUT_ATTACK2,
	INPUT_RAPPEL_JUMP,
	INPUT_RAPPEL_LONG_JUMP,
	INPUT_RAPPEL_SMASH_WINDOW,
	INPUT_PREV_WEAPON,
	INPUT_NEXT_WEAPON,
	INPUT_MELEE_ATTACK1,
	INPUT_MELEE_ATTACK2,
	INPUT_WHISTLE,
	INPUT_MOVE_LEFT,
	INPUT_MOVE_RIGHT,
	INPUT_MOVE_UP,
	INPUT_MOVE_DOWN,
	INPUT_LOOK_LEFT,
	INPUT_LOOK_RIGHT,
	INPUT_LOOK_UP,
	INPUT_LOOK_DOWN,
	INPUT_SNIPER_ZOOM_IN,
	INPUT_SNIPER_ZOOM_OUT,
	INPUT_SNIPER_ZOOM_IN_ALTERNATE,
	INPUT_SNIPER_ZOOM_OUT_ALTERNATE,
	INPUT_VEH_MOVE_LEFT,
	INPUT_VEH_MOVE_RIGHT,
	INPUT_VEH_MOVE_UP,
	INPUT_VEH_MOVE_DOWN,
	INPUT_VEH_GUN_LEFT,
	INPUT_VEH_GUN_RIGHT,
	INPUT_VEH_GUN_UP,
	INPUT_VEH_GUN_DOWN,
	INPUT_VEH_LOOK_LEFT,
	INPUT_VEH_LOOK_RIGHT,
	INPUT_REPLAY_START_STOP_RECORDING,
	INPUT_REPLAY_START_STOP_RECORDING_SECONDARY,
	INPUT_SCALED_LOOK_LR,
	INPUT_SCALED_LOOK_UD,
	INPUT_SCALED_LOOK_UP_ONLY,
	INPUT_SCALED_LOOK_DOWN_ONLY,
	INPUT_SCALED_LOOK_LEFT_ONLY,
	INPUT_SCALED_LOOK_RIGHT_ONLY,
	INPUT_REPLAY_MARKER_DELETE,
	INPUT_REPLAY_CLIP_DELETE,
	INPUT_REPLAY_PAUSE,
	INPUT_REPLAY_REWIND,
	INPUT_REPLAY_FFWD,
	INPUT_REPLAY_NEWMARKER,
	INPUT_REPLAY_RECORD,
	INPUT_REPLAY_SCREENSHOT,
	INPUT_REPLAY_HIDEHUD,
	INPUT_REPLAY_STARTPOINT,
	INPUT_REPLAY_ENDPOINT,
	INPUT_REPLAY_ADVANCE,
	INPUT_REPLAY_BACK,
	INPUT_REPLAY_TOOLS,
	INPUT_REPLAY_RESTART,
	INPUT_REPLAY_SHOWHOTKEY,
	INPUT_REPLAY_CYCLEMARKERLEFT,
	INPUT_REPLAY_CYCLEMARKERRIGHT,
	INPUT_REPLAY_FOVINCREASE,
	INPUT_REPLAY_FOVDECREASE,
	INPUT_REPLAY_CAMERAUP,
	INPUT_REPLAY_CAMERADOWN,
	INPUT_REPLAY_SAVE,
	INPUT_REPLAY_TOGGLETIME,
	INPUT_REPLAY_TOGGLETIPS,
	INPUT_REPLAY_PREVIEW,
	INPUT_REPLAY_TOGGLE_TIMELINE,
	INPUT_REPLAY_TIMELINE_PICKUP_CLIP,
	INPUT_REPLAY_TIMELINE_DUPLICATE_CLIP,
	INPUT_REPLAY_TIMELINE_PLACE_CLIP,
	INPUT_REPLAY_CTRL,
	INPUT_REPLAY_TIMELINE_SAVE,
	INPUT_REPLAY_PREVIEW_AUDIO,
	INPUT_VEH_DRIVE_LOOK,
	INPUT_VEH_DRIVE_LOOK2,
	INPUT_VEH_FLY_ATTACK2,
	INPUT_RADIO_WHEEL_UD,
	INPUT_RADIO_WHEEL_LR,
	INPUT_VEH_SLOWMO_UD,
	INPUT_VEH_SLOWMO_UP_ONLY,
	INPUT_VEH_SLOWMO_DOWN_ONLY,
	INPUT_VEH_HYDRAULICS_CONTROL_TOGGLE,
	INPUT_VEH_HYDRAULICS_CONTROL_LEFT,
	INPUT_VEH_HYDRAULICS_CONTROL_RIGHT,
	INPUT_VEH_HYDRAULICS_CONTROL_UP,
	INPUT_VEH_HYDRAULICS_CONTROL_DOWN,
	INPUT_VEH_HYDRAULICS_CONTROL_LR,
	INPUT_VEH_HYDRAULICS_CONTROL_UD,
	INPUT_SWITCH_VISOR,
	INPUT_VEH_MELEE_HOLD,
	INPUT_VEH_MELEE_LEFT,
	INPUT_VEH_MELEE_RIGHT,
	INPUT_MAP_POI,
	INPUT_REPLAY_SNAPMATIC_PHOTO,
	INPUT_VEH_CAR_JUMP,
	INPUT_VEH_ROCKET_BOOST,
	INPUT_VEH_FLY_BOOST,
	INPUT_VEH_PARACHUTE,
	INPUT_VEH_BIKE_WINGS,
	INPUT_VEH_FLY_BOMB_BAY,
	INPUT_VEH_FLY_COUNTER,
	INPUT_VEH_TRANSFORM,
	MAX_INPUTS,
	UNDEFINED_INPUT,
	DYNAMIC_MAPPING_MOUSE_X,
	DYNAMIC_MAPPING_MOUSE_Y,
	FIRST_INPUT,
	SCRIPTED_INPUT_FIRST,
	SCRIPTED_INPUT_LAST
};
enum class eDispatchType : uint64_t {
	PoliceAutomobile = 1,
	PoliceHelicopter,
	FireDepartment,
	SwatAutomobile,
	AmbulanceDepartment,
	PoliceRiders,
	PoliceVehicleRequest,
	PoliceRoadBlock,
	PoliceAutomobileWaitPulledOver,
	PoliceAutomobileWaitCruising,
	Gangs,
	SwatHelicopter,
	PoliceBoat,
	ArmyVehicle,
	BikerBackup,
	Assassin,
};